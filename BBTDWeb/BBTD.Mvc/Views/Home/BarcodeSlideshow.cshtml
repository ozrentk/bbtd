@model BBTD.Mvc.Models.BarcodeSlideshowData

<p>Number of barcodes: @Model.DataCount (first id: @Model.BarcodeId, current id: <span id="currentBarcodeId">@Model.BarcodeId</span>)</p>
<p>Barcode size: @Model.BarcodeSize</p>

<div>
    @if (Model.BarcodeType == ZXing.BarcodeFormat.PDF_417)
    {
    <img id="barcodePlaceholder" src="/images/1x1-ffffffff.png" style="image-rendering: pixelated; image-rendering: -moz-crisp-edges;" />
    }
    else
    {
    <img id="barcodePlaceholder" src="/images/1x1-ffffffff.png" width="@Model.BarcodeSize" height="@Model.BarcodeSize" style="image-rendering: pixelated; image-rendering: -moz-crisp-edges;" />
    }
</div>

<div class="mt-2">
    <a id="barcodeSlideshowStart" class="btn btn-outline-primary">Next barcode</a> |
    <a asp-action="Index" class="btn btn-primary">Back to List</a>
</div>

<div style="height: 10em">
</div>

@section Scripts {
    <script>
        const imageBaseUrl = "/home/barcode";
        const hubUrl = "/messageHub";
        const messageMethod = "Reading";

        const imgEl = document.getElementById("barcodePlaceholder");
        const ids = [...Array(100).keys()];
        let nextId = 1;

        const barcodeSlideNext = () => {
            const currentBarcodeIdEl = document.getElementById("currentBarcodeId");
            if (ids[nextId])
            {
                currentBarcodeIdEl.innerText = ids[nextId];
                imgEl.src = `${imageBaseUrl}/${ids[nextId]}`;
                nextId++;
            }
        }

        const onReceiveMessage = (id, isReadingCorrect) => {
            if (!isReadingCorrect) {
                console.error(`Id: ${id} read incorrectly`);
            } else if (id == (nextId - 2)) {
                console.log(`Id: ${id} read too fast`);
            } else if (id != (nextId - 1)) {
                console.log(`Id: ${id} incorrect`);
            } else {
                console.log(`Id: ${id} read succesfully`);
                barcodeSlideNext();
            }
        }

        const onDomContentLoaded = async (event) => {
            let signalrConn = new signalR.HubConnectionBuilder().withUrl(hubUrl).build();
            signalrConn.on(messageMethod, onReceiveMessage);

            let btnEl = document.getElementById("barcodeSlideshowStart");
            btnEl.addEventListener("click", barcodeSlideNext);

            try {
                await signalrConn.start();
                console.log("signalr connection established");
            } catch(err) {
                return console.error(err.toString());
            }

            barcodeSlideNext();
        }

        document.addEventListener("DOMContentLoaded", onDomContentLoaded);

    </script>
}